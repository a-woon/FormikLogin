{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"/Users/aaronwoon/MITxPRO-FormikLogin-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // DONE: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      alert(\"Login Successful\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"emailField\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emailError\",\n      style: {\n        color: \"red\"\n      },\n      children: formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"pswField\",\n      name: \"password\",\n      type: \"password\",\n      onChange: formik.handleChange,\n      value: formik.values.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pswError\",\n      style: {\n        color: \"red\"\n      },\n      children: formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 35\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\n\nconst validate = values => {\n  const errors = {}; // Check EMAIL\n\n  if (!values.email) {\n    errors.emailError = \"Field required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Username should be an valid email address\";\n  } // Check PASSWORD\n\n\n  if (!values.password) {\n    errors.password = \"Field required\";\n  } else if (values.password.length < 12) {\n    errors.password = \"Password must be at least 12 characters long\";\n  }\n\n  return errors;\n};\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aaronwoon/MITxPRO-FormikLogin-main/src/App.js"],"names":["React","useFormik","App","formik","initialValues","email","password","validate","onSubmit","values","alert","handleSubmit","handleChange","color","errors","emailError","test","length"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n\nfunction App() {\n  // DONE: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n\n    validate,\n\n    onSubmit: (values) => {\n      alert(\"Login Successful\");\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <p></p>\n\n      <label htmlFor=\"email\">Email Address:</label>\n      <input\n        id=\"emailField\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        value={formik.values.email}\n      />\n      <div id=\"emailError\" style={{ color: \"red\" }}>\n        {formik.errors.email ? <div>{formik.errors.email}</div> : null}\n      </div>\n      <p></p>\n\n      <label htmlFor=\"password\">Password:</label>\n      <input\n        id=\"pswField\"\n        name=\"password\"\n        type=\"password\"\n        onChange={formik.handleChange}\n        value={formik.values.password}\n      />\n      <div id=\"pswError\" style={{ color: \"red\" }}>\n        {formik.errors.password ? <div>{formik.errors.password}</div> : null}\n      </div>\n      <p></p>\n\n      <p>\n        <button id=\"submitBtn\" type=\"submit\">\n          Submit\n        </button>\n      </p>\n    </form>\n  );\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  // Check EMAIL\n  if (!values.email) {\n    errors.emailError = \"Field required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Username should be an valid email address\";\n  }\n\n  // Check PASSWORD\n  if (!values.password) {\n    errors.password = \"Field required\";\n  } else if (values.password.length < 12) {\n    errors.password = \"Password must be at least 12 characters long\";\n  }\n\n  return errors;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}